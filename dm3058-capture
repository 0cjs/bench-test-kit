#!/usr/bin/env python3

from rigol import *
from common import *
import time
import sys
import os
import argparse

script_name = os.path.basename(sys.argv[0])
filepath = os.getcwd()

def print_help():
    global script_name
    print ("Usage:")
    print ("    " + script_name + " [dmm_ip]")
    print ()
    print ("Usage examples:")
    print ("    " + script_name)
    print ("    " + script_name + " 192.168.1.3")
    print ()
    print ("This program captures the screen of the multimeter")
    print ("    as a BMP file with a timestamp in the file name.")
    print ()

parser = argparse.ArgumentParser(description='DM3058 Capture.')
parser.add_argument("ip_address", nargs='?', default=None,
                    help=("IP address of a network or a host. Can be "
                          "IPv4 or IPv6 address"))
parser.add_argument("-I", "--imgur", action='store_true',
                    help="Upload to Imgur")
parser.add_argument("-P", "--preview", action='store_true',
                    help="Preview Image")

args = parser.parse_args()

if args.ip_address is not None:
    INSTRUMENT_IP = args.ip_address
else:
    INSTRUMENT_IP = find_arp(RIGOL_OUI)
    if INSTRUMENT_IP is None:
        print_help()
        sys.exit("Error: Hardware address not found in ARP table, IP will have to be specified manually.")

# Check network response (ping)
if not instrument_ping(INSTRUMENT_IP):
    sys.exit("Error: No response pinging address " + INSTRUMENT_IP)

print("Capturing screenshot..")

timestamp = time.strftime("%Y-%m-%d_%H:%M:%S", time.localtime())
filename = "DM3058_%s.bmp" % (timestamp)

file_length = dm3058_screenshot(INSTRUMENT_IP, "%s/%s" % (filepath, filename))

if file_length is not None:
    print("Saved screenshot to %s (%.1fKB)" % (filename, file_length/1024.0))
    if args.preview:
        image_preview(filename)
    if args.imgur:
        imgur_post(filename, "DM3058 Screen Capture")
else:
    print("Capture failed.")